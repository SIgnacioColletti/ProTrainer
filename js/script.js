/**
 * ========================================
 * PROTRAINER - MAIN SCRIPT
 * ========================================
 * Archivo principal de l√≥gica JavaScript
 * D√≠a 2: Sistema de autenticaci√≥n y navegaci√≥n
 */

// Importar configuraci√≥n de Firebase
import { auth, db } from "./firebaseConfig.js";
import { onAuthStateChanged } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-auth.js";

/**
 * ========================================
 * INICIALIZACI√ìN
 * ========================================
 */
document.addEventListener("DOMContentLoaded", () => {
  console.log("üöÄ ProTrainer iniciado correctamente");

  // Verificar estado de autenticaci√≥n
  checkAuthState();

  // Inicializar eventos
  initializeEventListeners();

  // Verificar conexi√≥n con Firebase (opcional para testing)
  checkFirebaseConnection();
});

/**
 * ========================================
 * VERIFICAR AUTENTICACI√ìN
 * ========================================
 */
function checkAuthState() {
  onAuthStateChanged(auth, (user) => {
    if (user) {
      // Usuario est√° logueado
      console.log("‚úÖ Usuario autenticado:", user.email);
      // Si est√° en la landing, redirigir al dashboard
      if (
        window.location.pathname.includes("index.html") ||
        window.location.pathname === "/" ||
        window.location.pathname.endsWith("/proTrainer/")
      ) {
        window.location.href = "pages/dashboard.html";
      }
    } else {
      // Usuario no est√° logueado
      console.log("‚ùå Usuario no autenticado");
    }
  });
}

/**
 * ========================================
 * EVENT LISTENERS
 * ========================================
 */
function initializeEventListeners() {
  // Bot√≥n de inicio de sesi√≥n
  const btnLogin = document.getElementById("btnLogin");
  if (btnLogin) {
    btnLogin.addEventListener("click", handleLoginClick);
  }

  // Bot√≥n de registro
  const btnRegister = document.getElementById("btnRegister");
  if (btnRegister) {
    btnRegister.addEventListener("click", handleRegisterClick);
  }
}

/**
 * Manejar click en bot√≥n de login
 */
function handleLoginClick() {
  console.log("üì± Usuario presion√≥: Iniciar sesi√≥n");
  window.location.href = "pages/auth.html";
}

/**
 * Manejar click en bot√≥n de registro
 */
function handleRegisterClick() {
  console.log("üì± Usuario presion√≥: Registrarse");
  window.location.href = "pages/auth.html";
}

/**
 * ========================================
 * UTILIDADES
 * ========================================
 */

/**
 * Verificar conexi√≥n con Firebase
 * √ötil para debugging en desarrollo
 */
function checkFirebaseConnection() {
  if (auth && db) {
    console.log("‚úÖ Firebase conectado correctamente");
    console.log("Auth:", auth);
    console.log("Firestore:", db);
  } else {
    console.error("‚ùå Error al conectar con Firebase");
  }
}

/**
 * ========================================
 * EXPORTAR FUNCIONES (para uso futuro)
 * ========================================
 */
export { handleLoginClick, handleRegisterClick, checkAuthState };
